{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Handle responses\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }),\n  register: userData => api.post('/auth/register', userData),\n  getProfile: () => api.get('/auth/profile'),\n  updateProfile: userData => api.put('/auth/profile', userData)\n};\n\n// Books API\nexport const booksAPI = {\n  getBooks: params => api.get('/books', {\n    params\n  }),\n  getBook: id => api.get(`/books/${id}`),\n  addBook: bookData => api.post('/books', bookData),\n  updateBook: (id, bookData) => api.put(`/books/${id}`, bookData),\n  deleteBook: id => api.delete(`/books/${id}`),\n  updateProgress: (id, progressData) => api.post(`/books/${id}/progress`, progressData),\n  getProgress: id => api.get(`/books/${id}/progress`)\n};\n\n// Reading History API\nexport const historyAPI = {\n  getHistory: params => api.get('/history', {\n    params\n  }),\n  getStats: () => api.get('/stats')\n};\n\n// Health check\nexport const healthCheck = () => api.get('/health');\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","email","password","post","register","userData","getProfile","get","updateProfile","put","booksAPI","getBooks","params","getBook","id","addBook","bookData","updateBook","deleteBook","delete","updateProgress","progressData","getProgress","historyAPI","getHistory","getStats","healthCheck"],"sources":["D:/New folder (3)/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Handle responses\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', { email, password }),\n  register: (userData) => api.post('/auth/register', userData),\n  getProfile: () => api.get('/auth/profile'),\n  updateProfile: (userData) => api.put('/auth/profile', userData),\n};\n\n// Books API\nexport const booksAPI = {\n  getBooks: (params) => api.get('/books', { params }),\n  getBook: (id) => api.get(`/books/${id}`),\n  addBook: (bookData) => api.post('/books', bookData),\n  updateBook: (id, bookData) => api.put(`/books/${id}`, bookData),\n  deleteBook: (id) => api.delete(`/books/${id}`),\n  updateProgress: (id, progressData) => api.post(`/books/${id}/progress`, progressData),\n  getProgress: (id) => api.get(`/books/${id}/progress`),\n};\n\n// Reading History API\nexport const historyAPI = {\n  getHistory: (params) => api.get('/history', { params }),\n  getStats: () => api.get('/stats'),\n};\n\n// Health check\nexport const healthCheck = () => api.get('/health');\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}